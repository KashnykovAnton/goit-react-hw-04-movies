{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/Pages/MoviesSearch.js","components/Pages/MoviesPage.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","MoviesSearch","onValueSubmit","useState","valueSearch","setValueSearch","className","onSubmit","e","preventDefault","trim","alert","type","onChange","toLowerCase","autoComplete","autoFocus","placeholder","MoviesPage","history","useHistory","location","useLocation","url","useRouteMatch","movies","setMovies","valueQuery","URLSearchParams","search","get","useEffect","fetchSearchMovies","then","data","results","catch","err","console","log","map","id","original_title","name","to","pathname","state","from"],"mappings":"yIAAe,SAASA,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,ECVT,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,EAGM,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNb,EAAQL,OAAOqB,IAAS,GAAMC,SAAQ,SAAUxB,GAC9C,EAAemB,EAAQnB,EAAKuB,EAAOvB,OAE5BE,OAAOuB,0BAChBvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAEjEhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUxB,GACxCE,OAAOC,eAAegB,EAAQnB,EAAKE,OAAOa,yBAAyBQ,EAAQvB,OAKjF,OAAOmB,E,uDCSMQ,EAxCM,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACtB,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAkBA,OACE,wBAAQC,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaC,SAbZ,SAAAC,GACnBA,EAAEC,iBACyB,KAAvBL,EAAYM,QAIhBR,EAAcE,GAEdC,EAAe,KALbM,MAAM,8JAUN,UACE,wBAAQC,KAAK,SAASN,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVM,KAAK,OACLrC,MAAO6B,EACPS,SA3Ba,SAAAL,GAEnBH,EAAeG,EAAEf,OAAOlB,MAAMuC,gBA0BxBC,aAAa,MACbC,WAAS,EACTC,YAAY,mCC8BPC,UA5DI,WACjB,IAAMC,EAAUC,cACVC,EAAWC,cACTC,EAAQC,cAARD,IACR,EAA4BpB,mBAAS,IAArC,mBAAOsB,EAAP,KAAeC,EAAf,KAEMC,EAAa,IAAIC,gBAAgBP,EAASQ,QAAQC,IAAI,SAK5DC,qBAAU,WACHJ,GACLK,YAAkBL,GACfM,MAAK,SAAAC,GACwB,IAAxBA,EAAKC,QAAQvC,QACf8B,EAAUQ,EAAKC,YAIlBC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAEf,CAACV,IAWJ,OACE,qCACE,cAAC,EAAD,CAAczB,cAXI,SAAA3B,GAIpB4C,EAAQ7B,KAAR,OAAkB+B,GAAlB,IAA4BQ,OAAO,SAAD,OAAWtD,SAS1CkD,GACC,6BACGA,EAAOe,KAAI,YAAmC,IAAhCC,EAA+B,EAA/BA,GAAIC,EAA2B,EAA3BA,eAAgBC,EAAW,EAAXA,KACjC,OACE,6BACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,GAAD,OAAKtB,EAAL,YAAYkB,GACpBK,MAAO,CAAEC,KAAM1B,IAHnB,gBAMGqB,QANH,IAMGA,IAAkBC,KAPdF","file":"static/js/movies-page.935858da.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useState } from 'react';\n\nconst MoviesSearch = ({ onValueSubmit }) => {\n  const [valueSearch, setValueSearch] = useState('');\n\n  const handleChange = e => {\n    // console.log('e.target.value:', e.target.value);\n    setValueSearch(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (valueSearch.trim() === '') {\n      alert('Введите корректное название!');\n      return;\n    }\n    onValueSubmit(valueSearch);\n    // console.log('valueSearch:', valueSearch);\n    setValueSearch('');\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          value={valueSearch}\n          onChange={handleChange}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n};\n\nexport default MoviesSearch;\n","import { useState, useEffect } from 'react';\nimport { Link, useRouteMatch, useLocation, useHistory } from 'react-router-dom';\nimport { fetchSearchMovies } from '../services/movies-api';\nimport MoviesSearch from './MoviesSearch';\n\nconst MoviesPage = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const { url } = useRouteMatch();\n  const [movies, setMovies] = useState([]);\n\n  const valueQuery = new URLSearchParams(location.search).get('query');\n  // console.log('valueQuery:', valueQuery);\n\n  // console.log('location in Movies:', location);\n\n  useEffect(() => {\n    if (!valueQuery) return;\n    fetchSearchMovies(valueQuery)\n      .then(data => {\n        if (data.results.length !== 0) {\n          setMovies(data.results);\n          // setStatus('resolved');\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }, [valueQuery]);\n\n  const onSearchValue = value => {\n    // console.log('value:', value);\n    // console.log('history in Movies:', history);\n    // console.log('location in Movie BEFORE:', location);\n    history.push({ ...location, search: `query=${value}` });\n  };\n\n  // console.log('location.search in Movie AFTER:', location.search);\n\n  return (\n    <>\n      <MoviesSearch onValueSubmit={onSearchValue} />\n\n      {movies && (\n        <ul>\n          {movies.map(({ id, original_title, name }) => {\n            return (\n              <li key={id}>\n                <Link\n                  to={{\n                    pathname: `${url}/${id}`,\n                    state: { from: location },\n                  }}\n                >\n                  {original_title ?? name}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"sourceRoot":""}