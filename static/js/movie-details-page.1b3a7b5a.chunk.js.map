{"version":3,"sources":["components/Pages/MovieDetailsPage.js"],"names":["Cast","lazy","Reviews","MovieDetailsPage","history","useHistory","location","useLocation","useRouteMatch","url","path","movieId","useParams","console","log","useState","movie","setMovieDetails","useEffect","fetchGetMovieDetails","then","catch","err","message","type","onClick","push","state","from","src","poster_path","alt","title","width","release_date","first_air_date","overview","to","pathname","fallback"],"mappings":"wMAeMA,EAAOC,gBAAK,kBAChB,gCAEIC,EAAUD,gBAAK,kBACnB,gCAoFaE,UAjFU,WACvB,IAAMC,EAAUC,cACVC,EAAWC,cACjB,EAAsBC,cAAdC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,KACLC,EAAYC,cAAZD,QAGRE,QAAQC,IAAI,4BAA6BR,GAEzC,MAAiCS,mBAAS,IAA1C,mBAAOC,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRC,YAAqB,CAAER,YACpBS,KAAKH,GACLI,OAAM,SAAAC,GACLT,QAAQC,IAAIQ,EAAIC,cAEnB,CAACZ,IAgBJ,OACE,qCACE,wBAAQa,KAAK,SAASC,QAhBL,WAAO,IAAD,wBACzBrB,EAAQsB,KAAR,qCACEpB,QADF,IACEA,GADF,UACEA,EAAUqB,aADZ,iBACE,EAAiBC,YADnB,iBACE,EAAuBD,aADzB,iBACE,EAA8BC,YADhC,iBACE,EAAoCD,aADtC,aACE,EAA2CC,YAD7C,eAEItB,QAFJ,IAEIA,GAFJ,UAEIA,EAAUqB,aAFd,iBAEI,EAAiBC,YAFrB,iBAEI,EAAuBD,aAF3B,aAEI,EAA8BC,YAFlC,eAGItB,QAHJ,IAGIA,GAHJ,UAGIA,EAAUqB,aAHd,aAGI,EAAiBC,YAHrB,QAII,MAWF,qBAGCZ,GACC,gCACE,qBACEa,IAAG,yCAAoCb,EAAMc,aAC7CC,IAAKf,EAAMgB,MACXC,MAAM,UAER,4BAAIjB,EAAMgB,QACV,4BAAIhB,EAAMkB,cAAgBlB,EAAMmB,iBAChC,4BAAInB,EAAMoB,cAGd,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,GAAD,OAAK7B,EAAL,SACRkB,MAAO,CAAEC,KAAMtB,IAHnB,SAME,uCAEF,cAAC,IAAD,CACE+B,GAAI,CACFC,SAAS,GAAD,OAAK7B,EAAL,YACRkB,MAAO,CAAEC,KAAMtB,IAHnB,SAME,0CAEF,uBACA,cAAC,WAAD,CAAUiC,SAAU,cAAC,IAAD,IAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO7B,KAAI,UAAKA,EAAL,SAAX,SACE,cAACV,EAAD,MAEF,cAAC,IAAD,CAAOU,KAAI,UAAKA,EAAL,YAAX,SACE,cAACR,EAAD","file":"static/js/movie-details-page.1b3a7b5a.chunk.js","sourcesContent":["import { useState, useEffect, lazy, Suspense } from 'react';\nimport {\n  NavLink,\n  Switch,\n  Route,\n  useRouteMatch,\n  useParams,\n  useLocation,\n  useHistory,\n} from 'react-router-dom';\nimport LoaderSpin from '../Loader/LoaderSpin';\nimport { fetchGetMovieDetails } from '../services/movies-api';\n// import Cast from './Cast';\n// import Reviews from './Reviews';\n\nconst Cast = lazy(() =>\n  import('./Cast.js' /* webpackChunkName: \"cast-subpage\" */),\n);\nconst Reviews = lazy(() =>\n  import('./Reviews.js' /* webpackChunkName: \"reviews-subpage\" */),\n);\n\nconst MovieDetailsPage = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const { url, path } = useRouteMatch();\n  const { movieId } = useParams();\n\n  // console.log(useRouteMatch());\n  console.log('location in MovieDetails:', location);\n\n  const [movie, setMovieDetails] = useState([]);\n\n  useEffect(() => {\n    fetchGetMovieDetails({ movieId })\n      .then(setMovieDetails)\n      .catch(err => {\n        console.log(err.message);\n      });\n  }, [movieId]);\n\n  const handleGoBack = () => {\n    history.push(\n      location?.state?.from?.state?.from?.state?.from ??\n        location?.state?.from?.state?.from ??\n        location?.state?.from ??\n        '/',\n    );\n    // console.log('location in button:', location);\n\n    // console.log('history in button', history);\n  };\n\n  // const imageUrl = `https://image.tmdb.org/t/p/w500${poster_path}`;\n\n  return (\n    <>\n      <button type=\"button\" onClick={handleGoBack}>\n        Go back\n      </button>\n      {movie && (\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n            alt={movie.title}\n            width=\"240px\"\n          />\n          <p>{movie.title}</p>\n          <p>{movie.release_date || movie.first_air_date}</p>\n          <p>{movie.overview}</p>\n        </div>\n      )}\n      <NavLink\n        to={{\n          pathname: `${url}/cast`,\n          state: { from: location },\n        }}\n      >\n        <p>Cast</p>\n      </NavLink>\n      <NavLink\n        to={{\n          pathname: `${url}/reviews`,\n          state: { from: location },\n        }}\n      >\n        <p>Reviews</p>\n      </NavLink>\n      <hr />\n      <Suspense fallback={<LoaderSpin />}>\n        <Switch>\n          <Route path={`${path}/cast`}>\n            <Cast />\n          </Route>\n          <Route path={`${path}/reviews`}>\n            <Reviews />\n          </Route>\n        </Switch>\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"sourceRoot":""}